/*
 * Copyright 2024 Subair Mullappilly
 *
 * Subair Mullappilly <msubair@hotmail.com>

 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include "sun8i-a83t.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pwm/pwm.h>
#include <dt-bindings/input/input.h>

/ {
	model = "ARM-SBC M7";
	compatible = "arm-sbc,m7", "allwinner,sun8i-a83t";

	aliases {
		serial0 = &uart0;
		ethernet0 = &rtl8152;
		mmc0 = &mmc0;
		mmc1 = &mmc2;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	connector {
		compatible = "hdmi-connector";
		type = "a";

		port {
			hdmi_con_in: endpoint {
				remote-endpoint = <&hdmi_out_con>;
			};
		};
	};

	bt_sco_codec: bt-sco-codec {
		#sound-dai-cells = <1>;
		compatible = "linux,bt-sco";
		sound-name-prefix = "Bluetooth";
	};

	speaker_amp: audio-amplifier {
		status = "okay";
		compatible = "simple-audio-amplifier";
		shutdown-gpios = <&pio 4 18 GPIO_ACTIVE_HIGH>; /*PE18 */
		mute-gpios = <&r_pio 0 7 GPIO_ACTIVE_LOW>; /* PL7*/
		sound-name-prefix = "Speaker Amp";
	};

	reg_usb1_vbus: reg-usb1-vbus {
		compatible = "regulator-fixed";
		regulator-name = "usb1-vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
		enable-active-high;
		gpio = <&pio 7 4 GPIO_ACTIVE_HIGH>; /* PH4 */
	};

	usb-hub {
		compatible = "smsc,usb3503";
		initial-mode = <1>; /* initialize in HUB mode */
		//disabled-ports = <1>;
		intn-gpios = <&pio 6 13 GPIO_ACTIVE_HIGH>; /* PG13, assuming it's the interrupt pin */
		reset-gpios = <&pio 6 12 GPIO_ACTIVE_LOW>; /* PG12, for hub reset */
		connect-gpios = <&r_pio 0 6 GPIO_ACTIVE_HIGH>; /* PL6, assuming it's used for connectivity control */
		refclk-frequency = <19200000>; /* Reference clock frequency */
	};

	sound: sound {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "simple-audio-card";
		simple-audio-card,name = "ac100-audio";
		simple-audio-card,aux-devs = <&ac100_codec_analog>;
		simple-audio-card,widgets = "Microphone", "Headset Microphone",
					    "Microphone", "Internal Microphone",
					    "Headphone", "Headphone Jack",
					    "Speaker", "Internal Speaker";
		simple-audio-card,routing =
				"Headphone Jack", "HP",
				"Left DAC", "DACL",
				"Right DAC", "DACR",
				"ADCL", "Left ADC",
				"ADCR", "Right ADC",
				"Internal Microphone", "MBIAS",
				"MIC1", "Internal Microphone",
				"Headset Microphone", "HBIAS",
				"MIC2", "Headset Microphone";

		simple-audio-card,dai-link@0 {
			format = "i2s";
			frame-master = <&link0_cpu>;
			bitclock-master = <&link0_cpu>;
			mclk-fs = <512>;

			link0_cpu: cpu {
				sound-dai = <&i2s0>;
			};

			link0_codec: codec {
				sound-dai = <&ac100_codec 0>;
			};
		};
	};
};

&ccu {
	/* Use a stable clock source with known fixed rate for MCLK */
	assigned-clocks = <&ccu CLK_CSI_MCLK>;
	assigned-clock-parents = <&osc24M>;
	assigned-clock-rates = <24000000>;
};

&cpu0 {
	cpu-supply = <&reg_dcdc2>;
};

&cpu100 {
	cpu-supply = <&reg_dcdc3>;
};

&de {
	status = "okay";
};

&hdmi {
	status = "okay";
	hvcc-supply = <&reg_dldo1>;
	#sound-dai-cells = <0>;
};

&hdmi_out {
	hdmi_out_con: endpoint {
		remote-endpoint = <&hdmi_con_in>;
	};
};

&ehci0 {
    status = "okay";
    #address-cells = <1>;
    #size-cells = <0>;
    rtl8152: device@7 {
        compatible = "realtek,r8152";
        reg = <7>;
    };

	rtl8188ftv: device@4 {
        compatible = "realtek,rtl8188ftv";
        reg = <4>;
    };
};

&ehci1 {
	status = "okay";
};

&i2s0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2s0_pins>;
};

&mmc0 {
	vmmc-supply = <&reg_dcdc1>;
	pinctrl-names = "default";
	pinctrl-0 = <&mmc0_pins>;
	bus-width = <4>;
	cd-gpios = <&pio 5 6 GPIO_ACTIVE_LOW>;
	status = "okay";
};

&mmc2 {
	pinctrl-0 = <&mmc2_8bit_emmc_pins>;
	pinctrl-names = "default";
	vmmc-supply = <&reg_dcdc1>;
	vqmmc-supply = <&reg_dcdc1>;
	bus-width = <8>;
	non-removable;
	cap-mmc-hw-reset;
	status = "okay";
};

&pwm {
	pinctrl-names = "default";
	pinctrl-0 = <&pwm_pin>;
	status = "okay";
};


&r_rsb {
	status = "okay";

	axp81x: pmic@3a3 {
		compatible = "x-powers,axp813";
		reg = <0x3a3>;
		interrupt-parent = <&r_intc>;
		interrupts = <GIC_SPI 32 IRQ_TYPE_LEVEL_LOW>;
		swin-supply = <&reg_dcdc1>;
		x-powers,drive-vbus-en;
	};

	ac100: codec@e89 {
		compatible = "x-powers,ac100";
		reg = <0xe89>;

		ac100_codec_analog: codec-analog {
			compatible = "x-powers,ac100-codec-analog";
			cpvdd-supply = <&reg_aldo2>;
		};

		ac100_codec: codec {
			#sound-dai-cells = <1>;
			compatible = "x-powers,ac100-codec";
			interrupt-parent = <&r_pio>;
			interrupts = <0 11 IRQ_TYPE_LEVEL_LOW>; /* PL11 */
			#clock-cells = <0>;
			clock-output-names = "4M_adda";

			LDOIN-supply = <&reg_aldo2>;
			AVCC-supply = <&reg_aldo3>;
			VDDIO1-supply = <&reg_aldo3>;
			VDDIO2-supply = <&reg_aldo3>;
		};

		ac100_rtc: rtc {
			compatible = "x-powers,ac100-rtc";
			interrupt-parent = <&r_intc>;
			interrupts = <GIC_SPI 32 IRQ_TYPE_LEVEL_LOW>;
			clocks = <&ac100_codec>;
			#clock-cells = <1>;
			clock-output-names = "cko1_rtc",
					     "cko2_rtc",
					     "cko3_rtc";
		};
	};

};

#include "axp81x.dtsi"

&battery_power_supply {
	status = "okay";
};

&reg_aldo1 {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-name = "vcc-1.8";
};

&reg_aldo2 {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
	regulator-name = "vdd-drampll";
};

&reg_aldo3 {
	regulator-min-microvolt = <3000000>;
	regulator-max-microvolt = <3000000>;
	regulator-always-on;
	regulator-name = "avcc";
};

&reg_dcdc1 {
	regulator-min-microvolt = <3100000>;
	regulator-max-microvolt = <3100000>;
	regulator-always-on;
	regulator-name = "vcc-io";
};

&reg_dcdc2 {
	regulator-min-microvolt = <700000>;
	regulator-max-microvolt = <1100000>;
	regulator-always-on;
	regulator-name = "vdd-cpu-A";
};

&reg_dcdc3 {
	regulator-min-microvolt = <700000>;
	regulator-max-microvolt = <1100000>;
	regulator-always-on;
	regulator-name = "vdd-cpu-B";
};

&reg_dcdc4 {
	regulator-min-microvolt = <700000>;
	regulator-max-microvolt = <1100000>;
	regulator-name = "vdd-gpu";
};

&reg_dcdc5 {
	regulator-min-microvolt = <1200000>;
	regulator-max-microvolt = <1500000>;
	regulator-always-on;
	regulator-name = "vcc-dram";
};

&reg_dcdc6 {
	regulator-min-microvolt = <900000>;
	regulator-max-microvolt = <900000>;
	regulator-always-on;
	regulator-name = "vdd-sys";
};

&reg_dldo1 {
	regulator-min-microvolt = <3100000>;
	regulator-max-microvolt = <3100000>;
	regulator-name = "vcc-wifi-io";
};

&reg_dldo2 {
	regulator-min-microvolt = <3300000>;
	regulator-max-microvolt = <4200000>;
	regulator-name = "vbat-nfc";
	regulator-always-on;
};

&reg_dldo3 {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-name = "vdd-csi";
};

&reg_dldo4 {
	regulator-min-microvolt = <2800000>;
	regulator-max-microvolt = <2800000>;
	regulator-name = "avdd-csi";
};

&reg_drivevbus {
	regulator-name = "usb0-vbus";
	status = "okay";
};

&reg_eldo1 {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-name = "pvdd-nfc";
	regulator-always-on;
};

&reg_eldo2 {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-name = "vcc-dsi";
};

&reg_eldo3 {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-name = "dvdd-csi-f";
};

&reg_fldo1 {
	regulator-min-microvolt = <1200000>;
	regulator-max-microvolt = <1200000>;
	regulator-name = "vcc-hsic";
};

&reg_fldo2 {
	regulator-min-microvolt = <700000>;
	regulator-max-microvolt = <1100000>;
	regulator-always-on;
	regulator-name = "vdd-cpus";
};

&reg_ldo_io0 {
	regulator-min-microvolt = <3100000>;
	regulator-max-microvolt = <3100000>;
	regulator-name = "vcc-ctp";
	status = "okay";
};

&reg_ldo_io1 {
	regulator-min-microvolt = <3300000>;
	regulator-max-microvolt = <3300000>;
	regulator-name = "vcc-vb";
	status = "okay";
};

&reg_sw {
	regulator-min-microvolt = <3100000>;
	regulator-max-microvolt = <3100000>;
	regulator-name = "vcc-lcd";
};

&sound_hdmi {
	status = "okay";
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pb_pins>;
	status = "okay";
};

&usb_otg {
	status = "okay";
	dr_mode = "host";
};

&usbphy {
	usb0_id_det-gpios = <&pio 7 11 GPIO_ACTIVE_HIGH>; /* PH11 */
	usb0_vbus_power-supply = <&usb_power_supply>;
	usb0_vbus-supply = <&reg_drivevbus>;
	usb1_vbus-supply = <&reg_usb1_vbus>;
	status = "okay";
};
